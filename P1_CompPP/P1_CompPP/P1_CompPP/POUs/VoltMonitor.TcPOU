<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="VoltMonitor" Id="{ab398dd9-3a48-4aac-bec4-7b546cd8c4a7}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM VoltMonitor
VAR
	i : USINT := 0;
	k : USINT := 0;
	counter : USINT := 0;
	b : ARRAY[0..3] OF BOOL;
	b1 : BOOL;
	b2 : BOOL;
	b3 : BOOL;
	pause : BOOL;
	VMBoardWDT_TON : TON;
	VMBoardWDT_PT	: TIME := T#3S;
	VMBoardWDT_ET	: TIME;
	DataNull	: BOOL := 0;
	DataNullRebunceTMR_TON : TON;
	DataNullRebounce_PT	: TIME := T#800MS;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
(*IF Heartbeat.pulse_ms = TRUE AND pause = FALSE THEN
	i := i + 1;
	counter := 16-i;
	IF counter >= 16 THEN 
		counter := 0;
	END_IF
	VoltMonitor_DB.Channel := counter ;
	VoltMonitor_DB.VoltageReading_raw[counter] := GVL.raw_VoltageMonitor;
END_IF*)

b[0] := 0; //VoltMonitor_DB.Channel.0;
b[1] := 0; //VoltMonitor_DB.Channel.1;
b[2] := 0; //VoltMonitor_DB.Channel.2;
b[3] := 0; //VoltMonitor_DB.Channel.3;
//VoltMonitor_DB.VoltageReading_raw[0] := GVL.raw_VoltageMonitor;


//VoltMonitor_DB.CapRaw_Str :=  MID (UINT_TO_STRING (GVL.B170357_CapRaw), 10, 5);



//VoltMonitor_DB.VoltageReading_raw[0] := VoltMonitor_DB.CapRaw; //STRING_TO_INT (VoltMonitor_DB.CapRaw_Str);
FOR k := 0 TO 1 BY 1 DO //0 - 1 two channels only
	
	IF Input.B170357_CapRaw[k] <> 0 THEN
		VoltMonitor_DB.VoltageReading_raw[k].0 := VoltMonitor_DB.CapRaw[k].2;
		VoltMonitor_DB.VoltageReading_raw[k].1 := VoltMonitor_DB.CapRaw[k].3;
		VoltMonitor_DB.VoltageReading_raw[k].2 := VoltMonitor_DB.CapRaw[k].4;
		VoltMonitor_DB.VoltageReading_raw[k].3 := VoltMonitor_DB.CapRaw[k].5;
	
		VoltMonitor_DB.VoltageReading_raw[k].4 := VoltMonitor_DB.CapRaw[k].6;
		VoltMonitor_DB.VoltageReading_raw[k].5 := VoltMonitor_DB.CapRaw[k].7;
		VoltMonitor_DB.VoltageReading_raw[k].6 := VoltMonitor_DB.CapRaw[k].8;
		VoltMonitor_DB.VoltageReading_raw[k].7 := VoltMonitor_DB.CapRaw[k].9;
	
		VoltMonitor_DB.VoltageReading_raw[k].8 := VoltMonitor_DB.CapRaw[k].10;
		VoltMonitor_DB.VoltageReading_raw[k].9 := VoltMonitor_DB.CapRaw[k].11;
	
		VoltMonitor_DB.VoltageReading_raw[k].10 := 0;//VoltMonitor_DB.CapRaw.14;
		VoltMonitor_DB.VoltageReading_raw[k].11 := 0;//VoltMonitor_DB.CapRaw.15;
		VoltMonitor_DB.VoltageReading_raw[k].12 := 0;//VoltMonitor_DB.CapRaw.12;
		VoltMonitor_DB.VoltageReading_raw[k].13 := 0;//VoltMonitor_DB.CapRaw.13;
		VoltMonitor_DB.VoltageReading_raw[k].14 := 0; //VoltMonitor_DB.CapRaw.14;
	
		VoltMonitor_DB.VoltageReading_raw[k].15 := 0;//VoltMonitor_DB.CapRaw.4;
		//VoltMonitor_DB.CapRaw_DummySnap[k] := Input.B170357_CapRaw[k];//VoltMonitor_DB.VoltageReading_raw[0];
		//ELSE
		//	VoltMonitor_DB.VoltageReading_raw[k] := ULINT_TO_INT(NULL);
			//VoltMonitor_DB.CapRaw_DummySnap[k] := 0;
	END_IF
	
END_FOR

IF VoltMonitor_DB.CapRaw[0] = 0 THEN 
	VMBoardWDT_TON (IN := TRUE, PT := VMBoardWDT_PT, ET => VMBoardWDT_ET);
	ELSE 
		VMBoardWDT_TON (IN := FALSE);
END_IF

IF VMBoardWDT_TON.Q THEN 
	DataNull := TRUE; 
	VoltMonitor_DB.LossVoltMonitorBoard := TRUE;
END_IF

IF DataNull = TRUE THEN
	VoltMonitor_DB.VoltageReading_raw[0] := ULINT_TO_INT(NULL);
END_IF

IF VoltMonitor_DB.LossVoltMonitorBoard = TRUE THEN
	DataNullRebunceTMR_TON( IN := TRUE, PT := DataNullRebounce_PT);
END_IF

IF DataNullRebunceTMR_TON.Q = TRUE THEN
	DataNull := FALSE;
	DataNullRebunceTMR_TON( IN := FALSE);
END_IF



//VoltMonitor_DB.CapRawBIT := WORD_TO_HEXSTR ( UINT_TO_WORD( VoltMonitor_DB.CapRaw[0] ), iPrecision := 16, bLoCase := FALSE);
VoltMonitor_DB.CapRawBIT := BYTE_TO_BINSTR( UINT_TO_BYTE( VoltMonitor_DB.CapRaw[0] ), iPrecision := 16);
//missedCTU.PV := 10000;
//missedCTU.RESET := FALSE;
(*
IF Input.B170357_CapRaw[1] <> Input.B170357_CapRaw[11] OR 
	Input.B170357_CapRaw[2] <> Input.B170357_CapRaw[12] OR 
	Input.B170357_CapRaw[2] <> Input.B170357_CapRaw[13] OR 
	Input.B170357_CapRaw[3] <> Input.B170357_CapRaw[14] OR 
	Input.B170357_CapRaw[3] <> Input.B170357_CapRaw[15] OR 
	Input.B170357_CapRaw[1] <> Input.B170357_CapRaw[16] //OR 
	(*GVL.B170357_CapRaw[1] <> GVL.B170357_CapRaw[13]*) THEN
	VoltMonitor_DB.missedCTU.CU := TRUE;
	//VoltMonitor_DB.ONS (CLK := TRUE);
	ELSE
		VoltMonitor_DB.missedCTU.CU := FALSE;
		//VoltMonitor_DB.ONS.CLK := FALSE; 
END_IF

VoltMonitor_DB.missingCNT_REAL := WORD_TO_REAL(VoltMonitor_DB.missingCNT);
CounterUP();
*)
//missingCNT := missedCTU.CV;

//IF pause = TRUE THEN
//	VoltMonitor_DB.VoltageReading_raw[0] := 0;
//END_IF;

IF i > 16 THEN 
	i := 0;
END_IF

IF k > 1 THEN 
	k := 0;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="VoltMonitor">
      <LineId Id="87" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="101" Count="2" />
      <LineId Id="96" Count="0" />
      <LineId Id="66" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="63" Count="2" />
      <LineId Id="104" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="146" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="199" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="160" Count="3" />
      <LineId Id="183" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="166" Count="3" />
      <LineId Id="184" Count="0" />
      <LineId Id="170" Count="1" />
      <LineId Id="185" Count="0" />
      <LineId Id="172" Count="4" />
      <LineId Id="159" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="206" Count="1" />
      <LineId Id="209" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="225" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="292" Count="0" />
      <LineId Id="291" Count="0" />
      <LineId Id="297" Count="0" />
      <LineId Id="299" Count="1" />
      <LineId Id="298" Count="0" />
      <LineId Id="302" Count="0" />
      <LineId Id="253" Count="0" />
      <LineId Id="338" Count="0" />
      <LineId Id="303" Count="1" />
      <LineId Id="352" Count="0" />
      <LineId Id="351" Count="0" />
      <LineId Id="353" Count="1" />
      <LineId Id="342" Count="0" />
      <LineId Id="341" Count="0" />
      <LineId Id="343" Count="1" />
      <LineId Id="346" Count="0" />
      <LineId Id="345" Count="0" />
      <LineId Id="347" Count="0" />
      <LineId Id="355" Count="0" />
      <LineId Id="348" Count="0" />
      <LineId Id="350" Count="0" />
      <LineId Id="349" Count="0" />
      <LineId Id="306" Count="0" />
      <LineId Id="305" Count="0" />
      <LineId Id="322" Count="0" />
      <LineId Id="234" Count="0" />
      <LineId Id="260" Count="0" />
      <LineId Id="254" Count="0" />
      <LineId Id="229" Count="0" />
      <LineId Id="267" Count="5" />
      <LineId Id="238" Count="0" />
      <LineId Id="275" Count="0" />
      <LineId Id="244" Count="0" />
      <LineId Id="276" Count="0" />
      <LineId Id="247" Count="0" />
      <LineId Id="236" Count="0" />
      <LineId Id="273" Count="0" />
      <LineId Id="265" Count="0" />
      <LineId Id="241" Count="0" />
      <LineId Id="266" Count="0" />
      <LineId Id="257" Count="0" />
      <LineId Id="243" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="179" Count="1" />
      <LineId Id="182" Count="0" />
      <LineId Id="75" Count="1" />
      <LineId Id="21" Count="0" />
      <LineId Id="202" Count="2" />
      <LineId Id="201" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>