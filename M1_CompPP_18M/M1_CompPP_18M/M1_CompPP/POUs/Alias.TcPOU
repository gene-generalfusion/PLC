<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="Alias" Id="{ebc75665-f0df-4b03-b4d1-48515468f179}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Alias
VAR
	i : INT := 1;
	n : INT := 8;
	a : INT := 0; //0-15
	k : INT := 0;
	m : INT := 0;
	p : INT := 0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//R1 : MCP**  
	//INPUT
	//DI
	MCP_IO.MasterStopPB_NotPressed				:= Input.R1_01_00;  //NC - Master stop PB not pressed - black pb on mcp
	MCP_IO.CageEstopCircuitOK					:= Input.R1_01_01;  //case Estop circuit okay (Rly1 (120vac)  
	MCP_IO.PSU1_DCOK							:= Input.R1_01_02; // psu1 dc ok
	//Spare										:= Input.R1_01_03; //
	//Spare										:= Input.R1_01_04; // 
	//Spare										:= Input.R1_01_05; //  
	//Spare										:= Input.R1_01_06; //  
	//Spare										:= Input.R1_01_07; //
	
	//DI
	MCP_IO.Charger[1].inhibited					:= NOT Input.R1_02_00; //TDK802 1
	MCP_IO.Charger[1].EndOfCharge				:= NOT Input.R1_02_01; //TDK802 1
	MCP_IO.Charger[1].HV_isON					:= NOT Input.R1_02_02; //TDK802 1
	MCP_IO.Charger[1].SummaryFaulted			:= NOT Input.R1_02_03; //TDK802 1
	MCP_IO.Charger[2].inhibited					:= NOT Input.R1_02_04; //TDK802 2
	MCP_IO.Charger[2].EndOfCharge				:= NOT Input.R1_02_05; //TDK802 2
	MCP_IO.Charger[2].HV_isON					:= NOT Input.R1_02_06; //TDK802 2
	MCP_IO.Charger[2].SummaryFaulted			:= NOT Input.R1_02_07; //TDK802 2
	
	MCP_IO.Charger[3].inhibited					:= NOT Input.R1_03_00; //TDK802 3
	MCP_IO.Charger[3].EndOfCharge				:= NOT Input.R1_03_01; //TDK802 3
	MCP_IO.Charger[3].HV_isON					:= NOT Input.R1_03_02; //TDK802 3
	MCP_IO.Charger[3].SummaryFaulted			:= NOT Input.R1_03_03; //TDK802 3
	MCP_IO.Charger[4].inhibited					:= NOT Input.R1_03_04; //TDK802 4
	MCP_IO.Charger[4].EndOfCharge				:= NOT Input.R1_03_05; //TDK802 4
	MCP_IO.Charger[4].HV_isON					:= NOT Input.R1_03_06; //TDK802 4
	MCP_IO.Charger[4].SummaryFaulted			:= NOT Input.R1_03_07; //TDK802 4
	
	MCP_IO.Charger[5].inhibited					:= NOT Input.R1_04_00; //TDK802 5
	MCP_IO.Charger[5].EndOfCharge				:= NOT Input.R1_04_01; //TDK802 5
	MCP_IO.Charger[5].HV_isON					:= NOT Input.R1_04_02; //TDK802 5
	MCP_IO.Charger[5].SummaryFaulted			:= NOT Input.R1_04_03; //TDK802 5
	MCP_IO.Charger[6].inhibited					:= NOT Input.R1_04_04; //TDK802 6
	MCP_IO.Charger[6].EndOfCharge				:= NOT Input.R1_04_05; //TDK802 6
	MCP_IO.Charger[6].HV_isON					:= NOT Input.R1_04_06; //TDK802 6
	MCP_IO.Charger[6].SummaryFaulted			:= NOT Input.R1_04_07; //TDK802 6
	(*shaft ramp add below*)
	
	//DQ
	Output.R1_06_00	:= MCP_IO.Charger[1].inhibit;
	Output.R1_06_01	:= MCP_IO.Charger[1].HV_ON;
	Output.R1_06_02	:= MCP_IO.Charger[2].inhibit;
	Output.R1_06_03	:= MCP_IO.Charger[2].HV_ON;
	Output.R1_06_04	:= MCP_IO.Charger[3].inhibit;
	Output.R1_06_05	:= MCP_IO.Charger[3].HV_ON;
	Output.R1_06_06	:= MCP_IO.Charger[4].inhibit;
	Output.R1_06_07	:= MCP_IO.Charger[4].HV_ON;
	
	//DQ
	Output.R1_07_00	:= MCP_IO.Charger[5].inhibit;
	Output.R1_07_01	:= MCP_IO.Charger[5].HV_ON;
	Output.R1_07_02	:= MCP_IO.Charger[6].inhibit;
	Output.R1_07_03	:= MCP_IO.Charger[6].HV_ON;
	//Output.R1_07_04 := spare
	//Output.R1_07_05 spare
	//Output.R1_07_06 spare
	//Output.R1_07_07 spare
	
	//EL3068 - AI
	MCP_IO.Charger[1].voltageFeedback_raw		:= Input.R1_08_00;
	MCP_IO.Charger[2].voltageFeedback_raw		:= Input.R1_08_01;
	MCP_IO.Charger[3].voltageFeedback_raw		:= Input.R1_08_02;
	MCP_IO.Charger[4].voltageFeedback_raw		:= Input.R1_08_03;
	MCP_IO.Charger[5].voltageFeedback_raw		:= Input.R1_08_04;
	MCP_IO.Charger[6].voltageFeedback_raw		:= Input.R1_08_05;
	//Input.R1_08_06;
	//Input.R1_08_07;
		
	//EL4008 AQ
	Output.R1_09_00	:= MCP_IO.Charger[1].voltageSP_raw;
	Output.R1_09_01	:= MCP_IO.Charger[2].voltageSP_raw;
	Output.R1_09_02	:= MCP_IO.Charger[3].voltageSP_raw;
	Output.R1_09_03	:= MCP_IO.Charger[4].voltageSP_raw;	
	Output.R1_09_04	:= MCP_IO.Charger[5].voltageSP_raw;
	Output.R1_09_05	:= MCP_IO.Charger[6].voltageSP_raw;
	
//R2 : LCP1***********************************************	
	//EL3068 - AI
	(*
	LCP1_IO.Segment[1].Module[1].voltageFeedback_raw := Input.R2_01_00;
	LCP1_IO.Segment[1].Module[2].voltageFeedback_raw := Input.R2_01_01;
	LCP1_IO.Segment[1].Module[3].voltageFeedback_raw := Input.R2_01_02;
	LCP1_IO.Segment[2].Module[4].voltageFeedback_raw := Input.R2_01_03;
	LCP1_IO.Segment[2].Module[5].voltageFeedback_raw := Input.R2_01_04;
	LCP1_IO.Segment[2].Module[6].voltageFeedback_raw := Input.R2_01_05;
	LCP1_IO.Segment[3].Module[7].voltageFeedback_raw := Input.R2_01_06;	
	LCP1_IO.Segment[3].Module[8].voltageFeedback_raw := Input.R2_01_07;
	
	//EL3068 - AI
	LCP1_IO.Segment[3].Module[9].voltageFeedback_raw := Input.R2_02_00;
	*)
	
//voltage monitor boards - two transmitter per module.
	FOR k := 0 TO 17 BY 1 DO 
		//VoltMonitor_DB.VoltMonDB[1].CapRaw[k] := Input.B170357_CapRaw[k];
		LCP1_IO.VMB.VTB[k].CapRaw := Input.B170357_CapRaw[k]; //0-17
	END_FOR
	
	//DI 
	LCP1_IO.Segment[1].ChargeRly_close			:= Input.R2_03_00; //rly1
	LCP1_IO.Segment[2].ChargeRly_close			:= Input.R2_03_01; //rly2
	LCP1_IO.Segment[3].ChargeRly_close			:= Input.R2_03_02; //rly3
	LCP1_IO.Segment[1].Module1To3DumpRly_close	:= Input.R2_03_03; //rlym_1
	LCP1_IO.Segment[2].Module4To6DumpRly_close	:= Input.R2_03_04; //rlym_2
	LCP1_IO.Segment[3].Module7To9DumpRly_close	:= Input.R2_03_05; //rlym_3  
	//spare	:= Input.R2_03_06; //rlym_4 changed from every dump relay fb to one fb per segment
	//spare	:= Input.R2_03_07; //rlym_5
	
	//DI
	//spare	:=  Input.R2_04_00; //rlym_6
	//spare	:=  Input.R2_04_01; //rlym_7
	//spare	:=  Input.R2_04_02; //rlym_8
	//spare	:=  Input.R2_04_03; //rlym_9
	LCP1_IO.Segment1to3_ShortContactClose		:= Input.R2_04_04;
	LCP1_IO.Segment1to3_UnShortContactClose		:= Input.R2_04_05;
	LCP1_IO.LossInterlockPressure				:= Input.R2_04_06;
	LCP1_IO.PSU1OK								:= Input.R2_04_07;
	
	//DQ
	Output.R2_06_00 := LCP1_IO.Segment[1].CloseChargeRly; //RLY1
	Output.R2_06_01 := LCP1_IO.Segment[2].CloseChargeRly; //RLY2
	Output.R2_06_02 := LCP1_IO.Segment[3].CloseChargeRly; //RLY3
	Output.R2_06_03 := LCP1_IO.Segment[1].OpenModule1To3DumpRly; //RLY4
	Output.R2_06_04 := LCP1_IO.Segment[2].OpenModule4To6DumpRly; //RLY5
	Output.R2_06_05 := LCP1_IO.Segment[3].OpenModule7To9DumpRly; //RLY6
	Output.R2_06_06 := LCP1_IO.Fire; //opto1
	Output.R2_06_07 := LCP1_IO.SegmentCharged; //LED

//R3 : LCP2***********************************************	
	//EL3068 - AI
	(*
	LCP2_IO.Segment[4].Module[1].voltageFeedback_raw := Input.R3_01_00;
	LCP2_IO.Segment[4].Module[2].voltageFeedback_raw := Input.R3_01_01;
	LCP2_IO.Segment[4].Module[3].voltageFeedback_raw := Input.R3_01_02;
	LCP2_IO.Segment[5].Module[4].voltageFeedback_raw := Input.R3_01_03;
	LCP2_IO.Segment[5].Module[5].voltageFeedback_raw := Input.R3_01_04;
	LCP2_IO.Segment[5].Module[6].voltageFeedback_raw := Input.R3_01_05;
	LCP2_IO.Segment[6].Module[7].voltageFeedback_raw := Input.R3_01_06;	
	LCP2_IO.Segment[6].Module[8].voltageFeedback_raw := Input.R3_01_07;
	
	//EL3068 - AI
	LCP2_IO.Segment[6].Module[9].voltageFeedback_raw := Input.R3_02_00;
	*)
//voltage monitor boards - two transmitter per module.
	FOR k := 0 TO 17 BY 1 DO 
		 LCP2_IO.VMB.VTB[k].CapRaw := Input.B170357_2_CapRaw[k];
	END_FOR
	
	//DI 
	LCP2_IO.Segment[4].ChargeRly_close			:= Input.R3_03_00; //rly1
	LCP2_IO.Segment[5].ChargeRly_close			:= Input.R3_03_01; //rly2
	LCP2_IO.Segment[6].ChargeRly_close			:= Input.R3_03_02; //rly3
	LCP2_IO.Segment[4].Module1To3DumpRly_close	:= Input.R3_03_03;
	LCP2_IO.Segment[5].Module4To6DumpRly_close	:= Input.R3_03_04;
	LCP2_IO.Segment[6].Module7To9DumpRly_close	:= Input.R3_03_05;
	//spare	:= Input.R3_03_06;
	//spare	:= Input.R3_03_07;
	
	//DI
	//spare	:= Input.R3_04_00;
	//spare	:= Input.R3_04_01;
	//spare	:= Input.R3_04_02;
	//spare	:= Input.R3_04_03;
	LCP2_IO.Segment4to6_ShortContactClose		:= Input.R3_04_04;
	LCP2_IO.Segment4to6_UnShortContactClose		:= Input.R3_04_05;
	LCP2_IO.LossInterlockPressure				:= Input.R3_04_06;
	LCP2_IO.PSU1OK								:= Input.R3_04_07;
	
	//DQ
	Output.R3_06_00 := LCP2_IO.Segment[4].CloseChargeRly; //RLY1
	Output.R3_06_01 := LCP2_IO.Segment[5].CloseChargeRly; //RLY2
	Output.R3_06_02 := LCP2_IO.Segment[6].CloseChargeRly; //RLY3
	Output.R3_06_03 := LCP2_IO.Segment[4].OpenModule1To3DumpRly; //RLY4
	Output.R3_06_04 := LCP2_IO.Segment[5].OpenModule4To6DumpRly; //RLY5
	Output.R3_06_05 := LCP2_IO.Segment[6].OpenModule7To9DumpRly; //RLY6
	Output.R3_06_06 := LCP2_IO.Fire; //opto1
	Output.R3_06_07 := LCP2_IO.SegmentCharged; //LED

	//LV Alias
	//commented out to test the sequence
	
	HMI_DB.ChargePB 				:= LV.TxWord1.0;
	HMI_DB.DumpPB					:= LV.TxWord1.1;		
	HMI_DB.AbortPB					:= LV.TxWord1.2;
	HMI_DB.FirePB					:= LV.TxWord1.3;
	HMI_DB.ClearFaultPB 			:= LV.TxWord1.4;
	HMI_DB.AllDumpRelaysOpenBP		:= LV.TxWord1.5;
	HMI_DB.AllChargeRelayCloseBP	:= LV.TxWord1.6;
	HMI_DB.SystemSafeBP				:= LV.TxWord1.7;
	HMI_DB.CloseChargeRlySW			:= LV.TxWord1.8;
	HMI_DB.OpenDumpRlySW 			:= LV.TxWord1.9;
	HMI_DB.HMI_ManualModeSelected	:= LV.TxWord1.10;  // 1 = manual mode selected
	HMI_DB.TurnChrgHVonSW			:= LV.TxWord1.11;
	HMI_DB.TurnChrgInhibitOffSW		:= LV.TxWord1.12;
	HMI_DB.TurnOnShotTrigSW			:= LV.TxWord1.13;
	HMI_DB.TurnOnChargeAlarm		:= LV.TxWord1.14;
	HMI_DB.AllVoltMonBoardStatusOKBP:= LV.TxWord1.15;
	//not sure if you want to control these via LV
	(*
	MCP_IO.Charger[1].HV_ON			:= LV.TxWord2.0;
	MCP_IO.Charger[1].inhibit		:= LV.TxWord2.1;
	MCP_IO.Charger[2].HV_ON			:= LV.TxWord2.2;
	MCP_IO.Charger[2].inhibit		:= LV.TxWord2.3;
	
	MCP_IO.Charger[3].HV_ON			:= LV.TxWord2.4;
	MCP_IO.Charger[3].inhibit		:= LV.TxWord2.5;
	MCP_IO.Charger[4].HV_ON			:= LV.TxWord2.6;
	MCP_IO.Charger[4].inhibit		:= LV.TxWord2.7;
	MCP_IO.Charger[5].HV_ON			:= LV.TxWord2.8;
	MCP_IO.Charger[5].inhibit		:= LV.TxWord2.9;
	MCP_IO.Charger[6].HV_ON			:= LV.TxWord2.10;
	MCP_IO.Charger[6].inhibit		:= LV.TxWord2.11;
	HMI_DB.HMI_DB.AllDumpRelaysCloseBP := LV.TxWord2.12;
	*)
	
	LV.RxWord1.0 := LV.Charger[1].EndOfCharge			:= MCP_IO.Charger[1].EndOfCharge;
	LV.RxWord1.1 := LV.Charger[1].HV_isON				:= MCP_IO.Charger[1].HV_isON;
	LV.RxWord1.2 := LV.Charger[1].inhibited				:= MCP_IO.Charger[1].inhibited;
	LV.RxWord1.3 := LV.Charger[1].SummaryFaulted		:= MCP_IO.Charger[1].SummaryFaulted;
	LV.RxWord1.4 := LV.Charger[2].EndOfCharge			:= MCP_IO.Charger[2].EndOfCharge;
	LV.RxWord1.5 := LV.Charger[2].HV_isON				:= MCP_IO.Charger[2].HV_isON;
	LV.RxWord1.6 := LV.Charger[2].inhibited				:= MCP_IO.Charger[2].inhibited;
	LV.RxWord1.7 := LV.Charger[2].SummaryFaulted		:= MCP_IO.Charger[2].SummaryFaulted;
	LV.RxWord1.8 := LV.Charger[3].EndOfCharge			:= MCP_IO.Charger[3].EndOfCharge;
	LV.RxWord1.9 := LV.Charger[3].HV_isON				:= MCP_IO.Charger[3].HV_isON;
	LV.RxWord1.10 := LV.Charger[3].inhibited			:= MCP_IO.Charger[3].inhibited;
	LV.RxWord1.11 := LV.Charger[3].SummaryFaulted		:= MCP_IO.Charger[3].SummaryFaulted;
	LV.RxWord1.12 := LV.Charger[4].EndOfCharge			:= MCP_IO.Charger[4].EndOfCharge;
	LV.RxWord1.13 := LV.Charger[4].HV_isON				:= MCP_IO.Charger[4].HV_isON;
	LV.RxWord1.14 := LV.Charger[4].inhibited			:= MCP_IO.Charger[4].inhibited;
	LV.RxWord1.15 := LV.Charger[4].SummaryFaulted		:= MCP_IO.Charger[4].SummaryFaulted;
	
	LV.RxWord2.0 := LV.Charger[5].EndOfCharge			:= MCP_IO.Charger[5].EndOfCharge;
	LV.RxWord2.1 := LV.Charger[5].HV_isON				:= MCP_IO.Charger[5].HV_isON;
	LV.RxWord2.2 := LV.Charger[5].inhibited				:= MCP_IO.Charger[5].inhibited;
	LV.RxWord2.3 := LV.Charger[5].SummaryFaulted		:= MCP_IO.Charger[5].SummaryFaulted;
	LV.RxWord2.4 := LV.Charger[6].EndOfCharge			:= MCP_IO.Charger[6].EndOfCharge;
	LV.RxWord2.5 := LV.Charger[6].HV_isON				:= MCP_IO.Charger[6].HV_isON;
	LV.RxWord2.6 := LV.Charger[6].inhibited				:= MCP_IO.Charger[6].inhibited;
	LV.RxWord2.7 := LV.Charger[6].SummaryFaulted		:= MCP_IO.Charger[6].SummaryFaulted;
	(*shaft ramp add below*)
	
	LV.RxWord3.0 := LCP1_IO.Segment[1].ChargeRly_close;
	LV.RxWord3.1 := LCP1_IO.Segment[2].ChargeRly_close;
	LV.RxWord3.2 := LCP1_IO.Segment[3].ChargeRly_close;
	LV.RxWord3.3 := LCP2_IO.Segment[4].ChargeRly_close;
	LV.RxWord3.4 := LCP2_IO.Segment[5].ChargeRly_close;
	LV.RxWord3.5 := LCP2_IO.Segment[6].ChargeRly_close;
	
	LV.RxWord3.6 := LCP1_IO.Segment[1].Module1To3DumpRly_close;
	LV.RxWord3.7 := LCP1_IO.Segment[2].Module4To6DumpRly_close;
	LV.RxWord3.8 := LCP1_IO.Segment[3].Module7To9DumpRly_close;
	LV.RxWord3.9 := LCP2_IO.Segment[4].Module1To3DumpRly_close;
	LV.RxWord3.10 := LCP2_IO.Segment[5].Module4To6DumpRly_close;
	LV.RxWord3.11 := LCP2_IO.Segment[6].Module7To9DumpRly_close; 
	//LV.RxWord3.12  
	//LV.RxWord3.13  
	//LV.RxWord3.14  
	//LV.RxWord3.15  
	
	HMI_DB.ChargerHVOFF_rlyDelayPT_INT	:= LV.TxInt[1];
	HMI_DB.HVONdelayPT_INT 				:= LV.TxInt[2];
	LV.RxInt[1]							:= HMI_DB.ChargingRunOutTMR_elapse;
	
	HMI_DB.RunOutTMR_PT_INT				:= LV.TxDint[1];
	LV.RxDint[1]						:= HMI_DB.RunOutTMR_elapse;	
	
	
	FOR i := 1 TO n BY 1 DO
		HMI_DB.TDKLoad[i].eChargerType 					:= LV.TDKLoad[i].eChargerType;
		HMI_DB.TDKLoad[i].PSratedV						:= LV.TDKLoad[i].PSratedV;
		HMI_DB.TDKLoad[i].RequiredChargedV 				:= LV.TDKLoad[i].RequiredChargedV;
		HMI_DB.TDKLoad[i].wLCA							:= LV.TDKLoad[i].wLCA;;
		HMI_DB.TDKLoad[i].NumOfCharger					:= LV.TDKLoad[i].NumOfCharger;	
		HMI_DB.TDKLoad[i].TotalCapacitance				:= LV.TDKLoad[i].TotalCapacitance;

		LV.Charger[i].ChargeTime 						:= MCP_IO.Charger[i].ChargeTime;
		LV.RxREAL[i] := LV.Charger[i].voltageFeedback	:= MCP_IO.Charger[i].voltageFeedback; //LV.RxREAL[8] for shaft ramp
		MCP_IO.Charger[i].voltageSP (*make this real*)	:= LV.TxREAL[i] := LV.Charger[i].voltageSP;
	
	END_FOR
	
	 //lcp 1 cap volt to lv
		 LV.RxREAL[9] := LCP1_IO.Segment[1].Module[1].VoltageFeedback[1];
		 LV.RxREAL[10] := LCP1_IO.Segment[1].Module[1].VoltageFeedback[2];
		 LV.RxREAL[11] := LCP1_IO.Segment[1].Module[2].VoltageFeedback[1];
		 LV.RxREAL[12] := LCP1_IO.Segment[1].Module[2].VoltageFeedback[2];
		 LV.RxREAL[13] := LCP1_IO.Segment[1].Module[3].VoltageFeedback[1];
		 LV.RxREAL[14] := LCP1_IO.Segment[1].Module[3].VoltageFeedback[2];
		 
		 LV.RxREAL[15] := LCP1_IO.Segment[2].Module[4].VoltageFeedback[1];
		 LV.RxREAL[16] := LCP1_IO.Segment[2].Module[4].VoltageFeedback[2];
		 LV.RxREAL[17] := LCP1_IO.Segment[2].Module[5].VoltageFeedback[1];
		 LV.RxREAL[18] := LCP1_IO.Segment[2].Module[5].VoltageFeedback[2];
		 LV.RxREAL[19] := LCP1_IO.Segment[2].Module[6].VoltageFeedback[1];
		 LV.RxREAL[20] := LCP1_IO.Segment[2].Module[6].VoltageFeedback[2];
		 
		 LV.RxREAL[21] := LCP1_IO.Segment[3].Module[7].VoltageFeedback[1];
		 LV.RxREAL[22] := LCP1_IO.Segment[3].Module[7].VoltageFeedback[2];
		 LV.RxREAL[23] := LCP1_IO.Segment[3].Module[8].VoltageFeedback[1];
		 LV.RxREAL[24] := LCP1_IO.Segment[3].Module[8].VoltageFeedback[2];
		 LV.RxREAL[25] := LCP1_IO.Segment[3].Module[9].VoltageFeedback[1];
		 LV.RxREAL[26] := LCP1_IO.Segment[3].Module[9].VoltageFeedback[2];
		 
	//lcp2 cap volt to lv	 
		 LV.RxREAL[27] := LCP2_IO.Segment[4].Module[1].VoltageFeedback[1];
		 LV.RxREAL[28] := LCP2_IO.Segment[4].Module[1].VoltageFeedback[2];
		 LV.RxREAL[29] := LCP2_IO.Segment[4].Module[2].VoltageFeedback[1];
		 LV.RxREAL[30] := LCP2_IO.Segment[4].Module[2].VoltageFeedback[2];
		 LV.RxREAL[31] := LCP2_IO.Segment[4].Module[3].VoltageFeedback[1];
		 LV.RxREAL[32] := LCP2_IO.Segment[4].Module[3].VoltageFeedback[2];
		
		 LV.RxREAL[33] := LCP2_IO.Segment[5].Module[4].VoltageFeedback[1];
		 LV.RxREAL[34] := LCP2_IO.Segment[5].Module[4].VoltageFeedback[2];
		 LV.RxREAL[35] := LCP2_IO.Segment[5].Module[5].VoltageFeedback[1];
		 LV.RxREAL[36] := LCP2_IO.Segment[5].Module[5].VoltageFeedback[2];
		 LV.RxREAL[37] := LCP2_IO.Segment[5].Module[6].VoltageFeedback[1];
		 LV.RxREAL[38] := LCP2_IO.Segment[5].Module[6].VoltageFeedback[2];
		 
		 LV.RxREAL[39] := LCP2_IO.Segment[6].Module[7].VoltageFeedback[1];
		 LV.RxREAL[40] := LCP2_IO.Segment[6].Module[7].VoltageFeedback[2];
		 LV.RxREAL[41] := LCP2_IO.Segment[6].Module[8].VoltageFeedback[1];
		 LV.RxREAL[42] := LCP2_IO.Segment[6].Module[8].VoltageFeedback[2];
		 LV.RxREAL[43] := LCP2_IO.Segment[6].Module[9].VoltageFeedback[1];
		 LV.RxREAL[44] := LCP2_IO.Segment[6].Module[9].VoltageFeedback[2];
		 
	
IF k > 17 THEN 
	k := 0;
END_IF

IF m > 17 THEN 
	m := 0;
END_IF

IF p > 17 THEN 
	p := 0;
END_IF

IF i > n THEN 
	i := 0;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="Alias">
      <LineId Id="14" Count="1" />
      <LineId Id="485" Count="0" />
      <LineId Id="391" Count="0" />
      <LineId Id="18" Count="2" />
      <LineId Id="51" Count="1" />
      <LineId Id="378" Count="1" />
      <LineId Id="410" Count="1" />
      <LineId Id="60" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="398" Count="0" />
      <LineId Id="434" Count="2" />
      <LineId Id="433" Count="0" />
      <LineId Id="438" Count="0" />
      <LineId Id="453" Count="0" />
      <LineId Id="439" Count="1" />
      <LineId Id="437" Count="0" />
      <LineId Id="442" Count="2" />
      <LineId Id="441" Count="0" />
      <LineId Id="458" Count="0" />
      <LineId Id="446" Count="2" />
      <LineId Id="445" Count="0" />
      <LineId Id="450" Count="2" />
      <LineId Id="449" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="983" Count="0" />
      <LineId Id="461" Count="9" />
      <LineId Id="486" Count="0" />
      <LineId Id="471" Count="3" />
      <LineId Id="753" Count="3" />
      <LineId Id="487" Count="3" />
      <LineId Id="460" Count="0" />
      <LineId Id="491" Count="3" />
      <LineId Id="759" Count="0" />
      <LineId Id="757" Count="0" />
      <LineId Id="415" Count="0" />
      <LineId Id="496" Count="5" />
      <LineId Id="418" Count="1" />
      <LineId Id="505" Count="0" />
      <LineId Id="541" Count="0" />
      <LineId Id="781" Count="0" />
      <LineId Id="539" Count="1" />
      <LineId Id="538" Count="0" />
      <LineId Id="548" Count="1" />
      <LineId Id="551" Count="0" />
      <LineId Id="550" Count="0" />
      <LineId Id="555" Count="0" />
      <LineId Id="554" Count="0" />
      <LineId Id="552" Count="1" />
      <LineId Id="794" Count="2" />
      <LineId Id="834" Count="0" />
      <LineId Id="848" Count="0" />
      <LineId Id="835" Count="0" />
      <LineId Id="833" Count="0" />
      <LineId Id="556" Count="0" />
      <LineId Id="535" Count="0" />
      <LineId Id="557" Count="1" />
      <LineId Id="536" Count="0" />
      <LineId Id="559" Count="2" />
      <LineId Id="568" Count="0" />
      <LineId Id="566" Count="1" />
      <LineId Id="562" Count="3" />
      <LineId Id="506" Count="0" />
      <LineId Id="571" Count="2" />
      <LineId Id="570" Count="0" />
      <LineId Id="575" Count="1" />
      <LineId Id="584" Count="4" />
      <LineId Id="574" Count="0" />
      <LineId Id="569" Count="0" />
      <LineId Id="592" Count="3" />
      <LineId Id="779" Count="0" />
      <LineId Id="596" Count="10" />
      <LineId Id="836" Count="2" />
      <LineId Id="831" Count="1" />
      <LineId Id="607" Count="28" />
      <LineId Id="791" Count="0" />
      <LineId Id="393" Count="0" />
      <LineId Id="866" Count="0" />
      <LineId Id="642" Count="0" />
      <LineId Id="867" Count="0" />
      <LineId Id="643" Count="7" />
      <LineId Id="653" Count="0" />
      <LineId Id="675" Count="0" />
      <LineId Id="767" Count="3" />
      <LineId Id="857" Count="0" />
      <LineId Id="716" Count="0" />
      <LineId Id="689" Count="0" />
      <LineId Id="745" Count="0" />
      <LineId Id="690" Count="0" />
      <LineId Id="705" Count="0" />
      <LineId Id="704" Count="0" />
      <LineId Id="709" Count="0" />
      <LineId Id="706" Count="0" />
      <LineId Id="708" Count="0" />
      <LineId Id="707" Count="0" />
      <LineId Id="710" Count="4" />
      <LineId Id="876" Count="0" />
      <LineId Id="715" Count="0" />
      <LineId Id="677" Count="0" />
      <LineId Id="676" Count="0" />
      <LineId Id="678" Count="0" />
      <LineId Id="656" Count="0" />
      <LineId Id="680" Count="0" />
      <LineId Id="717" Count="2" />
      <LineId Id="682" Count="0" />
      <LineId Id="722" Count="2" />
      <LineId Id="721" Count="0" />
      <LineId Id="726" Count="2" />
      <LineId Id="720" Count="0" />
      <LineId Id="733" Count="0" />
      <LineId Id="729" Count="2" />
      <LineId Id="725" Count="0" />
      <LineId Id="734" Count="2" />
      <LineId Id="732" Count="0" />
      <LineId Id="982" Count="0" />
      <LineId Id="737" Count="0" />
      <LineId Id="985" Count="2" />
      <LineId Id="984" Count="0" />
      <LineId Id="988" Count="1" />
      <LineId Id="1038" Count="0" />
      <LineId Id="990" Count="0" />
      <LineId Id="993" Count="2" />
      <LineId Id="1024" Count="1" />
      <LineId Id="1027" Count="3" />
      <LineId Id="991" Count="0" />
      <LineId Id="640" Count="0" />
      <LineId Id="657" Count="0" />
      <LineId Id="655" Count="0" />
      <LineId Id="687" Count="0" />
      <LineId Id="659" Count="1" />
      <LineId Id="662" Count="0" />
      <LineId Id="666" Count="2" />
      <LineId Id="699" Count="3" />
      <LineId Id="886" Count="0" />
      <LineId Id="703" Count="0" />
      <LineId Id="672" Count="0" />
      <LineId Id="674" Count="0" />
      <LineId Id="684" Count="1" />
      <LineId Id="669" Count="0" />
      <LineId Id="896" Count="0" />
      <LineId Id="898" Count="1" />
      <LineId Id="905" Count="1" />
      <LineId Id="909" Count="0" />
      <LineId Id="911" Count="1" />
      <LineId Id="933" Count="0" />
      <LineId Id="913" Count="6" />
      <LineId Id="921" Count="5" />
      <LineId Id="961" Count="0" />
      <LineId Id="932" Count="0" />
      <LineId Id="927" Count="4" />
      <LineId Id="920" Count="0" />
      <LineId Id="941" Count="13" />
      <LineId Id="962" Count="0" />
      <LineId Id="839" Count="3" />
      <LineId Id="847" Count="0" />
      <LineId Id="845" Count="1" />
      <LineId Id="844" Count="0" />
      <LineId Id="902" Count="0" />
      <LineId Id="901" Count="0" />
      <LineId Id="903" Count="1" />
      <LineId Id="970" Count="2" />
      <LineId Id="964" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>