<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="Permissives" Id="{639d0291-603e-4994-93d7-3ec14345fa0c}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Permissives
VAR
	
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF (LCP1_IO.Segment[1].ChargeRly_close = TRUE AND 
	LCP1_IO.Segment[2].ChargeRly_close = TRUE AND
	LCP1_IO.Segment[3].ChargeRly_close = TRUE AND 
	LCP2_IO.Segment[4].ChargeRly_close = TRUE AND 
	LCP2_IO.Segment[5].ChargeRly_close = TRUE AND 
	LCP2_IO.Segment[6].ChargeRly_close = TRUE) OR HMI_DB.AllChargeRelayCloseBP = TRUE
	THEN 
		Permissives_DB.AllChargeRelayClosed := TRUE;
	ELSIF 
		LCP1_IO.Segment[1].ChargeRly_close = FALSE AND 
		LCP1_IO.Segment[2].ChargeRly_close = FALSE AND
		LCP1_IO.Segment[3].ChargeRly_close = FALSE AND 
		LCP2_IO.Segment[4].ChargeRly_close = FALSE AND 
		LCP2_IO.Segment[5].ChargeRly_close = FALSE AND 
		LCP2_IO.Segment[6].ChargeRly_close = FALSE
	THEN
		Permissives_DB.AllChargeRelayClosed := FALSE;
END_IF;

IF (LCP1_IO.Segment[1].Module[1].DumpRly_close = FALSE AND 
	LCP1_IO.Segment[1].Module[2].DumpRly_close = FALSE AND
	LCP1_IO.Segment[1].Module[3].DumpRly_close = FALSE AND
	LCP1_IO.Segment[2].Module[4].DumpRly_close = FALSE AND
	LCP1_IO.Segment[2].Module[5].DumpRly_close = FALSE AND
	LCP1_IO.Segment[2].Module[6].DumpRly_close = FALSE AND
	LCP1_IO.Segment[3].Module[7].DumpRly_close = FALSE AND
	LCP1_IO.Segment[3].Module[8].DumpRly_close = FALSE AND
	LCP1_IO.Segment[3].Module[9].DumpRly_close = FALSE AND
	LCP2_IO.Segment[4].Module[1].DumpRly_close = FALSE AND 
	LCP2_IO.Segment[4].Module[2].DumpRly_close = FALSE AND
	LCP2_IO.Segment[4].Module[3].DumpRly_close = FALSE AND
	LCP2_IO.Segment[5].Module[4].DumpRly_close = FALSE AND
	LCP2_IO.Segment[5].Module[5].DumpRly_close = FALSE AND
	LCP2_IO.Segment[5].Module[6].DumpRly_close = FALSE AND
	LCP2_IO.Segment[6].Module[7].DumpRly_close = FALSE AND
	LCP2_IO.Segment[6].Module[8].DumpRly_close = FALSE AND
	LCP2_IO.Segment[6].Module[9].DumpRly_close = FALSE) OR HMI_DB.AllDumpRelaysOpenBP = TRUE
	THEN
		Permissives_DB.AllDumpRelayOpen := TRUE;
		ELSIF
			LCP1_IO.Segment[1].Module[1].DumpRly_close = TRUE AND 
			LCP1_IO.Segment[1].Module[2].DumpRly_close = TRUE AND
			LCP1_IO.Segment[1].Module[3].DumpRly_close = TRUE AND
			LCP1_IO.Segment[2].Module[4].DumpRly_close = TRUE AND
			LCP1_IO.Segment[2].Module[5].DumpRly_close = TRUE AND
			LCP1_IO.Segment[2].Module[6].DumpRly_close = TRUE AND
			LCP1_IO.Segment[3].Module[7].DumpRly_close = TRUE AND
			LCP1_IO.Segment[3].Module[8].DumpRly_close = TRUE AND
			LCP1_IO.Segment[3].Module[9].DumpRly_close = TRUE AND
			LCP2_IO.Segment[4].Module[1].DumpRly_close = TRUE AND 
			LCP2_IO.Segment[4].Module[2].DumpRly_close = TRUE AND
			LCP2_IO.Segment[4].Module[3].DumpRly_close = TRUE AND
			LCP2_IO.Segment[5].Module[4].DumpRly_close = TRUE AND
			LCP2_IO.Segment[5].Module[5].DumpRly_close = TRUE AND
			LCP2_IO.Segment[5].Module[6].DumpRly_close = TRUE AND
			LCP2_IO.Segment[6].Module[7].DumpRly_close = TRUE AND
			LCP2_IO.Segment[6].Module[8].DumpRly_close = TRUE AND
			LCP2_IO.Segment[6].Module[9].DumpRly_close = TRUE 
		THEN
			Permissives_DB.AllDumpRelayOpen := FALSE;
END_IF;

IF Permissives_DB.AllChargeRelayClosed = TRUE AND Permissives_DB.AllDumpRelayOpen = TRUE THEN
	Permissives_DB.ReadyToCharge := TRUE;
	ELSE 
		Permissives_DB.ReadyToCharge := FALSE;
END_IF

IF MCP_IO.Charger[1].voltageFeedback <= Permissives_DB.ChargerVThres AND 
	MCP_IO.Charger[2].voltageFeedback <= Permissives_DB.ChargerVThres AND 
	MCP_IO.Charger[3].voltageFeedback <= Permissives_DB.ChargerVThres AND
	MCP_IO.Charger[4].voltageFeedback <= Permissives_DB.ChargerVThres AND
	MCP_IO.Charger[5].voltageFeedback <= Permissives_DB.ChargerVThres AND
	MCP_IO.Charger[6].voltageFeedback <= Permissives_DB.ChargerVThres
	THEN
		Permissives_DB.ChargerVBelowThres := TRUE;
	ELSE
		Permissives_DB.ChargerVBelowThres := FALSE;
END_IF;

IF MCP_IO.Charger[1].HV_isON = FALSE AND 
	MCP_IO.Charger[2].HV_isON = FALSE AND 
	MCP_IO.Charger[3].HV_isON = FALSE AND
	MCP_IO.Charger[4].HV_isON = FALSE AND
	MCP_IO.Charger[5].HV_isON = FALSE AND
	MCP_IO.Charger[6].HV_isON = FALSE 
	THEN
		Permissives_DB.AllChargerHVisOFF := TRUE;
	ELSE 
		Permissives_DB.AllChargerHVisOFF := FALSE;
END_IF

IF MCP_IO.Charger[1].inhibited = TRUE AND
	MCP_IO.Charger[2].inhibited = TRUE AND
	MCP_IO.Charger[3].inhibited = TRUE AND
	MCP_IO.Charger[4].inhibited = TRUE AND
	MCP_IO.Charger[5].inhibited = TRUE AND
	MCP_IO.Charger[6].inhibited = TRUE
	THEN
		Permissives_DB.AllChargerInhibitON	:= TRUE;
	ELSE
		Permissives_DB.AllChargerInhibitON	:= FALSE;
END_IF;

IF LCP1_IO.Segment[1].Module[1].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	LCP1_IO.Segment[1].Module[2].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	LCP1_IO.Segment[1].Module[3].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	LCP1_IO.Segment[2].Module[4].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	LCP1_IO.Segment[2].Module[5].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	LCP1_IO.Segment[2].Module[6].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	LCP1_IO.Segment[3].Module[7].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	LCP1_IO.Segment[3].Module[8].VoltageFeedback <= Permissives_DB.CapVoltageThres AND 
	LCP1_IO.Segment[3].Module[9].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	
	LCP2_IO.Segment[4].Module[1].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	LCP2_IO.Segment[4].Module[2].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	LCP2_IO.Segment[4].Module[3].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	LCP2_IO.Segment[5].Module[4].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	LCP2_IO.Segment[5].Module[5].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	LCP2_IO.Segment[5].Module[6].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	LCP2_IO.Segment[6].Module[7].VoltageFeedback <= Permissives_DB.CapVoltageThres AND
	LCP2_IO.Segment[6].Module[8].VoltageFeedback <= Permissives_DB.CapVoltageThres AND 
	LCP2_IO.Segment[6].Module[9].VoltageFeedback <= Permissives_DB.CapVoltageThres 
(*  AND all other module voltage feedback <= 40, might need the -ve end & check for valid data*) 
	THEN
		Permissives_DB.AllCapsDischarged := TRUE;
	ELSE 
		Permissives_DB.AllCapsDischarged := FALSE;
END_IF


IF Permissives_DB.ChargerVBelowThres = TRUE AND 
	Permissives_DB.AllChargerHVisOFF = TRUE AND 
	Permissives_DB.AllChargerInhibitON	= TRUE AND 
	Permissives_DB.AllDumpRelayOpen = FALSE AND 
	Permissives_DB.AllCapsDischarged = TRUE 
THEN
	(*MCP_IO.Charger[2].voltageFeedback <= 10 AND *)
	Permissives_DB.SystemIsSafe := TRUE;
	ELSE
		Permissives_DB.SystemIsSafe := FALSE;
END_IF


		
IF Permissives_DB.AllCapsDischarged = TRUE THEN 
	LCP1_IO.SegmentCharged := FALSE; //for status light only
	LCP2_IO.SegmentCharged := FALSE; //for status light only
END_IF

IF MCP_IO.Charger[1].EndOfCharge = TRUE AND
	MCP_IO.Charger[2].EndOfCharge = TRUE AND
	MCP_IO.Charger[3].EndOfCharge = TRUE AND
	MCP_IO.Charger[4].EndOfCharge = TRUE AND
	MCP_IO.Charger[5].EndOfCharge = TRUE AND
	MCP_IO.Charger[6].EndOfCharge = TRUE 
THEN
	Permissives_DB.AllChargerEOC := TRUE;
	ELSE
		Permissives_DB.AllChargerEOC := FALSE;

END_IF;

]]></ST>
    </Implementation>
    <LineIds Name="Permissives">
      <LineId Id="5" Count="0" />
      <LineId Id="194" Count="4" />
      <LineId Id="268" Count="1" />
      <LineId Id="259" Count="0" />
      <LineId Id="261" Count="6" />
      <LineId Id="260" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="17" Count="1" />
      <LineId Id="199" Count="0" />
      <LineId Id="202" Count="5" />
      <LineId Id="209" Count="8" />
      <LineId Id="208" Count="0" />
      <LineId Id="19" Count="1" />
      <LineId Id="270" Count="0" />
      <LineId Id="272" Count="18" />
      <LineId Id="271" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="220" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="27" Count="1" />
      <LineId Id="26" Count="0" />
      <LineId Id="121" Count="1" />
      <LineId Id="291" Count="4" />
      <LineId Id="297" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="125" Count="1" />
      <LineId Id="124" Count="0" />
      <LineId Id="129" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="315" Count="1" />
      <LineId Id="318" Count="2" />
      <LineId Id="317" Count="0" />
      <LineId Id="130" Count="0" />
      <LineId Id="132" Count="1" />
      <LineId Id="131" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="321" Count="5" />
      <LineId Id="138" Count="0" />
      <LineId Id="140" Count="1" />
      <LineId Id="139" Count="0" />
      <LineId Id="144" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="327" Count="6" />
      <LineId Id="335" Count="0" />
      <LineId Id="346" Count="0" />
      <LineId Id="338" Count="7" />
      <LineId Id="337" Count="0" />
      <LineId Id="334" Count="0" />
      <LineId Id="336" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="147" Count="1" />
      <LineId Id="146" Count="0" />
      <LineId Id="135" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="53" Count="2" />
      <LineId Id="100" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="56" Count="1" />
      <LineId Id="39" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="366" Count="0" />
      <LineId Id="407" Count="0" />
      <LineId Id="468" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="476" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="82" Count="3" />
      <LineId Id="79" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="86" Count="2" />
      <LineId Id="72" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="77" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>