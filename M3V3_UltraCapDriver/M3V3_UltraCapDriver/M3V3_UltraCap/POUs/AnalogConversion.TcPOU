<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="AnalogConversion" Id="{3b8eecca-a8e5-4cfd-bb8d-8865397a6f0b}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM AnalogConversion
VAR
	i					: INT := 1; //charger 1-6
	j					: INT := 1;  // section 1 - 4 
	k					: INT := 1;  // cap 1-10
	m					: INT := 1; //form cap 1-12
	n					: INT := 6;
	MaxTemp				: INT := 100;
	MinTemp				: INT := 0;
	
	MaxCurrent			: INT := 1000;
	MinCurrent			: INT := 0;
	
	MaxVolt				: INT := 105;
	//VoltMonAC1			: ARRAY[1..18] OF VoltMonAC_FB;
	//VoltMonAC2			: ARRAY[1..18] OF VoltMonAC_FB;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[//MCP Charger 
//Analog Input
FOR i := 1 TO n BY 1 DO 
	//MCP_IO.Charger[i].voltageSP := (HMI_DB.TDKLoad[i].RequiredChargedV *1000);
	MCP_IO.Charger[i].voltageSP := (Setpoints.HPT5[i].RequiredChargedV);
END_FOR

//AI
FOR i := 1 TO n BY 1 DO
	//Temp
	MCP_IO.MagDriver[i].DumpResistorTemp_norm := Norm_x (raw_input := INT_TO_REAL (MCP_IO.MagDriver[i].DumpResistorTemp_raw),
														x_max := 32767,
														x_min := 0);
											
	MCP_IO.MagDriver[i].DumpResistorTemp := (MaxTemp - MinTemp) * ADC_10V( normal_input := MCP_IO.MagDriver[i].DumpResistorTemp_norm,
																			x_max := 10,
																			x_min := 0);
	//current																									
	MCP_IO.MagDriver[i].ShotCurrentFeedback_norm := Norm_x (raw_input := INT_TO_REAL (MCP_IO.MagDriver[i].ShotCurrentFeedback_raw),
														x_max := 32767,
														x_min := 0);
	
	MCP_IO.MagDriver[1].ShotCurrentFeedback := (MaxCurrent - MinCurrent) * ADC_10V( normal_input := MCP_IO.MagDriver[i].ShotCurrentFeedback_norm,
																							x_max := 10,
																							x_min := 0);

END_FOR;

//Analog Output
//voltageSP = Required Charge Voltage******************
//limit for charing the cap
//FOR i := 1 TO 8 BY 1 DO
FOR i := 1 TO n BY 1 DO	
	
	//set limits of charger voltage input 
	IF MCP_IO.Charger[i].voltageSP >= (MaxVolt) THEN
		MCP_IO.Charger[i].voltageSP := MaxVolt; //limit at 105V
	ELSIF MCP_IO.Charger[i].voltageSP <= 0 THEN
		MCP_IO.Charger[i].voltageSP := 0; //limit at 0V
	END_IF; 
		
	//prepare output signal for 50kV chargers.
	MCP_IO.Charger[i].voltageSP_norm := Norm_x (raw_input :=(MCP_IO.Charger[i].voltageSP), 
												x_max := MaxVolt,
												x_min := 0);	
												
	MCP_IO.Charger[i].voltageSP_raw := AQ (norm_input := MCP_IO.Charger[i].voltageSP_norm, 
												x_max := 10,
												x_min := 0);
																								
	//limite for output sigal (<= 10V)  this should not happen
	IF MCP_IO.Charger[i].voltageSP_raw >= 32767 THEN 
		MCP_IO.Charger[i].voltageSP_raw := 32767; 										
	END_IF;
	
END_FOR;

//no need for cap voltage feedback - the ultacap already scale those internally

//Cap voltage feedback
(*
//can also add a range of x samples for self calibrating **note: normalized range needs to be calibrated for each board
VoltMonitor_DB.VoltageReading_norm[0] := Norm_x (raw_input := INT_TO_REAL (VoltMonitor_DB.VoltageReading_raw[0]),
													x_max := 904, //10bit value - 1110001000 = 904deci
													x_min := 100); //100deci is the zero of range -1.61 to 12.01
LCP1_IO.Segment[1].Module[1].VoltageFeedback[1] := (12010 - 0) * ADC_10V(normal_input := VoltMonitor_DB.VoltageReading_norm[0],
																		x_max := 12.01,
																		x_min := 0); //use zero, it will cal for the -ve	

*)

(* // changed to a FB for norm and ADC
LCP1_IO.Segment[1].Module[1].VoltageFeedback_norm[1] := Norm_x (raw_input := INT_TO_REAL (LCP1_IO.Segment[1].Module[1].VoltageFeedback_raw[1]),
													x_max := 904, //10bit value - 1110001000 = 904deci
													x_min := 100); //100deci is the zero of range -1.61 to 12.01
LCP1_IO.Segment[1].Module[1].VoltageFeedback[1] := (12010 - 0) * ADC_10V(normal_input := LCP1_IO.Segment[1].Module[1].VoltageFeedback_norm[1],
																		x_max := 12.01,
																		x_min := 0); //use zero, it will cal for the -ve
*)

(*
// using FB instead.
VoltMonAC1[1](raw_input := DINT_TO_REAL(LCP1_IO.Segment[1].Module[1].VoltageFeedback_raw[1]),
				norm_x_max := 904, //individually calibrated, otherwise can do a for loop
				norm_x_min := 100, 
				RangUpp := 12.01, 
				RangLow := 0, 
				ADC_max := 12010, 
				ADC_min := 0, 
				voltage_reading => LCP1_IO.Segment[1].Module[1].VoltageFeedback[1]);
*)

					
//reset counter
//IF i > 8 THEN
IF i > n THEN
	i := 1;
END_IF;

IF j > 3 THEN 
	j := 1;
END_IF

IF k > 10 THEN 
	k := 1;
END_IF

IF m > 12 THEN 
	m := 1;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="AnalogConversion">
      <LineId Id="80" Count="0" />
      <LineId Id="254" Count="0" />
      <LineId Id="688" Count="2" />
      <LineId Id="654" Count="0" />
      <LineId Id="691" Count="2" />
      <LineId Id="1509" Count="3" />
      <LineId Id="1559" Count="2" />
      <LineId Id="1558" Count="0" />
      <LineId Id="1513" Count="3" />
      <LineId Id="1520" Count="0" />
      <LineId Id="1526" Count="0" />
      <LineId Id="1528" Count="1" />
      <LineId Id="1550" Count="0" />
      <LineId Id="256" Count="0" />
      <LineId Id="233" Count="1" />
      <LineId Id="548" Count="0" />
      <LineId Id="573" Count="0" />
      <LineId Id="292" Count="0" />
      <LineId Id="736" Count="0" />
      <LineId Id="739" Count="16" />
      <LineId Id="790" Count="5" />
      <LineId Id="1565" Count="0" />
      <LineId Id="1564" Count="0" />
      <LineId Id="300" Count="0" />
      <LineId Id="802" Count="8" />
      <LineId Id="819" Count="0" />
      <LineId Id="624" Count="0" />
      <LineId Id="833" Count="0" />
      <LineId Id="832" Count="0" />
      <LineId Id="827" Count="1" />
      <LineId Id="826" Count="0" />
      <LineId Id="829" Count="1" />
      <LineId Id="151" Count="0" />
      <LineId Id="836" Count="0" />
      <LineId Id="1508" Count="0" />
      <LineId Id="1507" Count="0" />
      <LineId Id="837" Count="0" />
      <LineId Id="840" Count="0" />
      <LineId Id="844" Count="6" />
      <LineId Id="1348" Count="0" />
      <LineId Id="1014" Count="0" />
      <LineId Id="1012" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="647" Count="0" />
      <LineId Id="153" Count="1" />
      <LineId Id="400" Count="0" />
      <LineId Id="399" Count="0" />
      <LineId Id="401" Count="1" />
      <LineId Id="404" Count="0" />
      <LineId Id="403" Count="0" />
      <LineId Id="405" Count="1" />
      <LineId Id="475" Count="0" />
      <LineId Id="474" Count="0" />
      <LineId Id="476" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>