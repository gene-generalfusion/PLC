<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="Stagger_FB" Id="{f66eca1b-eacb-46d0-ae51-b07877c95021}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Stagger_FB

VAR_INPUT
	start : BOOL := FALSE;
	n	  : INT := 8;
	reset : BOOL := FALSE;
END_VAR
VAR
	delayTMR_TON : TON;
	delayTMR_PT	 : TIME := T#100MS;
	delayTMR_ET	 : TIME;
	state		 : INT := 0;
	i			 : INT := 1;
	
	startOutput  : BOOL := 0;
END_VAR
VAR_OUTPUT
	OutputHi	: ARRAY[1..8] OF BOOL;

END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* start goes high, stagger output sequence starts in a delay, 
	when the last output is high, it goes to idle,
	if reset goes high, it turns off all outputs - this fb needs to be reset when we dont want to output to be high.
	**to add, if both start and reset are high, throw a warning sign
*)
IF start = TRUE THEN 

CASE state OF
	0: 	//idle 	
//		FOR i := 1 TO n BY 1 DO 
//			OutputHi[i] := FALSE;
//		END_FOR
		delayTMR_TON (IN := FALSE, PT := delayTMR_PT, ET => delayTMR_ET);
		IF start = TRUE THEN 
			state := 1;
//			ELSIF reset = TRUE THEN 
//				state := 3;
//			ELSE 
//				state := 0;
		END_IF
		
	1: 	//output
		OutputHi[i] := TRUE;
		delayTMR_TON (IN := TRUE, PT := delayTMR_PT, ET => delayTMR_ET);
		
		IF delayTMR_TON.Q = TRUE THEN 
			state := 2;
		END_IF;
	2:	//increment
		delayTMR_TON (IN := FALSE, PT := delayTMR_PT, ET => delayTMR_ET);
		i := i + 1;
		
		IF OutputHi[n] = TRUE THEN 
			start := FALSE;
			state := 0;
		ELSE 
			IF i > n THEN 
				i := 1;
			END_IF
			state := 1;
		END_IF;
//	3:	//reset output 
//		FOR i := 1 TO n BY 1 DO 
//			OutputHi[i] := FALSE;
//		END_FOR
//		delayTMR_TON (IN := FALSE, PT := delayTMR_PT, ET => delayTMR_ET);
//		reset := 0; //debounce reset input
//		state := 0;
END_CASE

ELSIF reset = TRUE THEN 
		FOR i := 1 TO n BY 1 DO 
			OutputHi[i] := FALSE;
		END_FOR
		i := 1;
		state := 0;
END_IF;

IF i > n THEN 
	i := 1;
END_IF
]]></ST>
    </Implementation>
    <LineIds Name="Stagger_FB">
      <LineId Id="14" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="105" Count="1" />
      <LineId Id="108" Count="1" />
      <LineId Id="77" Count="0" />
      <LineId Id="58" Count="2" />
      <LineId Id="66" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="74" Count="1" />
      <LineId Id="61" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="68" Count="1" />
      <LineId Id="72" Count="1" />
      <LineId Id="84" Count="0" />
      <LineId Id="118" Count="1" />
      <LineId Id="71" Count="0" />
      <LineId Id="87" Count="1" />
      <LineId Id="91" Count="0" />
      <LineId Id="93" Count="2" />
      <LineId Id="92" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="116" Count="1" />
      <LineId Id="115" Count="0" />
      <LineId Id="123" Count="1" />
      <LineId Id="33" Count="0" />
      <LineId Id="120" Count="2" />
      <LineId Id="113" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>